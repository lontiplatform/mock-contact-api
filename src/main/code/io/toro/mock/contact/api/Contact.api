{
    "authTypes": [
        "BASIC"
    ],
    "groups": [
        "ESBAPIAdminGroup"
    ],
    "info": {
        "title": "Mock Contact API",
        "description": "This is a sample contacts server. This can be used for mocking or testing APIs.\n\n### Sending Authenticated Requests\n\nYou can use your ECC account to send authenticated request to the API. Your ECC credentials must be sent in the `Authorization` header in the HTTP request\n\n#### To authenticate a request with basic authentication\n\n1. Combine your email and password with a colon (`:`). e.g. `jdoe@mailinator.com:pa$$w0rd`\n2. Encode the resulting string in Base64\n3. Include an Authorization header in the HTTP request containing the base64-encoded string. Example: ```\nAuthorization: Basic amRvZUBtYWlsaW5hdG9yLmNvbTpwYSQkdzByZA==```",
        "contact": {
            "name": "TORO Cloud",
            "url": "https://support.torocloud.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "basePath": "/mock-contact-api",
    "paths": {
        "/contacts": {
            "description": "Contact endpoint for getting all contacts and adding a single contact",
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Returns a list of all contacts stored in the database",
                "description": "This endpoint will retrieve all contacts in the mock contact API",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "body": "APIResponse",
                        "description": "List of all contacts",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"SUCCESS\",\n    \"message\": \"Successfully retrieved contacts\",\n    \"contacts\": [\n        {\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"email\": \"jdoe@mailinator.com\",\n            \"phoneNumber\": \"(538) 686-0011\",\n            \"dateCreated\": 1605663588705,\n            \"dateUpdated\": 1605663588705,\n            \"id\": \"7c29a7b7-e034-46b7-826f-526c6736061e\"\n        },\n        {\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"email\": \"janed@mailinator.com\",\n            \"phoneNumber\": \"(538) 686-0011\",\n            \"dateCreated\": 1605663588705,\n            \"dateUpdated\": 1605663588705,\n            \"id\": \"c4417a7d-34e9-4d5f-846d-95f60d9e4766\"\n        }\n    ]\n}"
                        }
                    }
                },
                "operationType": "gloop",
                "operationLocation": "io.toro.mock.contact.api.controller.GetContacts",
                "responseCodeField": "responseCode"
            },
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Adds a contact to the database",
                "description": "This endpoint will add a contact in the mock contact API",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "bodyParameter": {
                    "name": "contact",
                    "description": "The contact to be added"
                },
                "responses": {
                    "201": {
                        "body": "APIResponse",
                        "description": "Message returned when a contact is successfully added",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"OK\",\n    \"message\": \"Successfully added contact\",\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jdoe@mailinator.comt\",\n        \"phoneNumber\": \"(273) 721-4244\",\n        \"id\": \"7c29a7b7-e034-46b7-826f-526c6736061e\"\n    }\n}"
                        }
                    }
                },
                "operationType": "gloop",
                "operationLocation": "io.toro.mock.contact.api.controller.AddContact",
                "responseCodeField": "responseCode"
            }
        },
        "/contacts/{contactId}": {
            "description": "Contact endpoint for getting, updating, and deleting a single contact",
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Returns a single contact",
                "description": "This endpoint will retrieve a contact in the mock contact API",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "PATH",
                        "description": "The ID of the contact to find"
                    }
                ],
                "responses": {
                    "200": {
                        "body": "APIResponse",
                        "description": "Represents a contact",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"OK\",\n    \"message\": \"Successfully added contact\",\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jdoe@mailinator.comt\",\n        \"phoneNumber\": \"(273) 721-4244\",\n        \"dateCreated\": 1605663588705,\n        \"dateUpdated\": 1605663588705,\n        \"id\": \"7c29a7b7-e034-46b7-826f-526c6736061e\"\n    }\n}"
                        }
                    },
                    "404": {
                        "body": "APIException",
                        "description": "Message returned when a contact requested is not existing",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"ERROR\",\n    \"httpErrorCode\": 404,\n    \"message\": \"Contact not found.\"\n}"
                        }
                    }
                },
                "operationType": "gloop",
                "operationLocation": "io.toro.mock.contact.api.controller.GetContact",
                "responseCodeField": "responseCode"
            },
            "delete": {
                "tags": [
                    "Contact"
                ],
                "summary": "Deletes a single contact",
                "description": "Deletes a single contact",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "PATH",
                        "description": "The ID of the contact to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "body": "APIResponse",
                        "description": "Message returned when a contact is successfully deleted",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"SUCCESS\",\n    \"message\": \"Successfully deleted contact.\"\n}"
                        }
                    },
                    "404": {
                        "body": "APIException",
                        "description": "Message returned when a contact requested is not existing",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"ERROR\",\n    \"httpErrorCode\": 404,\n    \"message\": \"Contact not found.\"\n}"
                        }
                    }
                },
                "operationType": "gloop",
                "operationLocation": "io.toro.mock.contact.api.controller.DeleteContact",
                "responseCodeField": "responseCode"
            },
            "patch": {
                "tags": [
                    "Contact"
                ],
                "summary": "Updates a single contact",
                "description": "This endpoint will update a contact in the mock contact API",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "PATH",
                        "description": "The ID of the contact to updated"
                    }
                ],
                "bodyParameter": {
                    "name": "contact",
                    "description": "The contact to be modified"
                },
                "responses": {
                    "200": {
                        "body": "APIResponse",
                        "description": "The updated contact values",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"OK\",\n    \"message\": \"Successfully updated contact\",\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Updated\",\n        \"email\": \"jdoe@mailinator.comt\",\n        \"phoneNumber\": \"(273) 721-4244\",\n        \"id\": \"7c29a7b7-e034-46b7-826f-526c6736061e\"\n    }\n}"
                        }
                    },
                    "404": {
                        "body": "APIException",
                        "description": "Message returned when a contact requested is not existing",
                        "responseBodyMockData": {
                            "mockDataType": "JSON",
                            "mockData": "{\n    \"result\": \"ERROR\",\n    \"httpErrorCode\": 404,\n    \"message\": \"Contact not found.\"\n}"
                        }
                    }
                },
                "operationType": "gloop",
                "operationLocation": "io.toro.mock.contact.api.controller.UpdateContact",
                "responseCodeField": "responseCode"
            }
        }
    },
    "tags": [
        {
            "name": "Contact",
            "description": "The APIs for managing contacts.",
            "externalDocumentation": {
                "url": "https://github.com/torocloud/mock-contact-api/blob/master/README.md",
                "description": "Github repository"
            }
        }
    ],
    "externalDocumentation": {
        "url": "https://github.com/torocloud/mock-contact-api/blob/master/README.md"
    }
}